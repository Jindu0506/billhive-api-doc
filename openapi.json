{
  "openapi": "3.0.0",
  "info": {
    "title": "BillHive",
    "version": "0.0.1",
    "description": "facades",
    "contact": {
      "name": "Mohit Aggarwal",
      "email": "mohitetc2008@gmail.com"
    }
  },
  "paths": {
    "/actions": {
      "get": {
        "x-controller-name": "Action",
        "x-operation-name": "find",
        "tags": [
          "ActionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Action model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ActionController.find"
      }
    },
    "/features/{id}": {
      "patch": {
        "x-controller-name": "Feature",
        "x-operation-name": "updateById",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Feature PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeaturePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FeatureController.updateById"
      },
      "delete": {
        "x-controller-name": "Feature",
        "x-operation-name": "deleteById",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Feature DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FeatureController.deleteById"
      }
    },
    "/features": {
      "post": {
        "x-controller-name": "Feature",
        "x-operation-name": "create",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "200": {
            "description": "Feature model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFeature"
              }
            }
          }
        },
        "operationId": "FeatureController.create"
      },
      "get": {
        "x-controller-name": "Feature",
        "x-operation-name": "find",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "200": {
            "description": "Array of Feature model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeatureWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FeatureController.find"
      }
    },
    "/login": {
      "post": {
        "x-controller-name": "Auth",
        "x-operation-name": "login",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.login"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.login"
      }
    },
    "/menu/formatted": {
      "get": {
        "x-controller-name": "Menu",
        "x-operation-name": "findFormatted",
        "tags": [
          "MenuController"
        ],
        "responses": {
          "200": {
            "description": "Return value of MenuController.findFormatted"
          }
        },
        "operationId": "MenuController.findFormatted"
      }
    },
    "/menu": {
      "post": {
        "x-controller-name": "Menu",
        "x-operation-name": "create",
        "tags": [
          "MenuController"
        ],
        "responses": {
          "200": {
            "description": "Menu model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMenu"
              }
            }
          }
        },
        "operationId": "MenuController.create"
      },
      "get": {
        "x-controller-name": "Menu",
        "x-operation-name": "find",
        "tags": [
          "MenuController"
        ],
        "responses": {
          "200": {
            "description": "Array of Menu model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu.Filter"
                }
              }
            }
          }
        ],
        "operationId": "MenuController.find"
      }
    },
    "/microservices": {
      "post": {
        "x-controller-name": "Microservices",
        "x-operation-name": "create",
        "tags": [
          "MicroservicesController"
        ],
        "responses": {
          "200": {
            "description": "Microservices model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microservices"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMicroservices"
              }
            }
          }
        },
        "operationId": "MicroservicesController.create"
      },
      "get": {
        "x-controller-name": "Microservices",
        "x-operation-name": "find",
        "tags": [
          "MicroservicesController"
        ],
        "responses": {
          "200": {
            "description": "Array of Microservices model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MicroservicesWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microservices.Filter"
                }
              }
            }
          }
        ],
        "operationId": "MicroservicesController.find"
      }
    },
    "/notifications": {
      "get": {
        "x-controller-name": "Notification",
        "x-operation-name": "find",
        "tags": [
          "NotificationController"
        ],
        "responses": {
          "200": {
            "description": "Array of Notification model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification.Filter"
                }
              }
            }
          }
        ],
        "operationId": "NotificationController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "Ping",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/policies": {
      "get": {
        "x-controller-name": "Policy",
        "x-operation-name": "find",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Array of Policy model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PolicyController.find"
      }
    },
    "/product-rate-plan-components": {
      "post": {
        "x-controller-name": "ProductRatePlanComponent",
        "x-operation-name": "create",
        "tags": [
          "ProductRatePlanComponentController"
        ],
        "responses": {
          "200": {
            "description": "ProductRatePlanComponent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlanComponent"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductRatePlanComponent"
              }
            }
          }
        },
        "operationId": "ProductRatePlanComponentController.create"
      },
      "get": {
        "x-controller-name": "ProductRatePlanComponent",
        "x-operation-name": "find",
        "tags": [
          "ProductRatePlanComponentController"
        ],
        "responses": {
          "200": {
            "description": "Array of ProductRatePlanComponent model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductRatePlanComponentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlanComponent.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductRatePlanComponentController.find"
      }
    },
    "/product-rate-plans": {
      "post": {
        "x-controller-name": "ProductRatePlan",
        "x-operation-name": "create",
        "tags": [
          "ProductRatePlanController"
        ],
        "responses": {
          "200": {
            "description": "ProductRatePlan model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlan"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductRatePlan"
              }
            }
          }
        },
        "operationId": "ProductRatePlanController.create"
      },
      "get": {
        "x-controller-name": "ProductRatePlan",
        "x-operation-name": "find",
        "tags": [
          "ProductRatePlanController"
        ],
        "responses": {
          "200": {
            "description": "Array of ProductRatePlan model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductRatePlanWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlan.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductRatePlanController.find"
      }
    },
    "/products/{id}": {
      "patch": {
        "x-controller-name": "Product",
        "x-operation-name": "updateById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductController.updateById"
      },
      "get": {
        "x-controller-name": "Product",
        "x-operation-name": "findById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductController.findById"
      },
      "delete": {
        "x-controller-name": "Product",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductController.deleteById"
      }
    },
    "/products": {
      "post": {
        "x-controller-name": "Product",
        "x-operation-name": "create",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "operationId": "ProductController.create"
      },
      "get": {
        "x-controller-name": "Product",
        "x-operation-name": "find",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Array of Product model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.find"
      }
    },
    "/refreshToken": {
      "post": {
        "x-controller-name": "Auth",
        "x-operation-name": "refresh",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Reissuing Access Token",
          "required": true
        },
        "operationId": "AuthController.refresh"
      }
    },
    "/role/delete": {
      "post": {
        "x-controller-name": "Policy",
        "x-operation-name": "roleDelete",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Return value of PolicyController.roleDelete"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PolicyController.roleDelete"
      }
    },
    "/role/update": {
      "post": {
        "x-controller-name": "Policy",
        "x-operation-name": "roleUpdate",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Return value of PolicyController.roleUpdate"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PolicyController.roleUpdate"
      }
    },
    "/role": {
      "post": {
        "x-controller-name": "Policy",
        "x-operation-name": "login",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Return value of PolicyController.login"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PolicyController.login"
      }
    },
    "/template-vars": {
      "get": {
        "x-controller-name": "TemplateVar",
        "x-operation-name": "find",
        "tags": [
          "TemplateVarController"
        ],
        "responses": {
          "200": {
            "description": "Array of TemplateVar model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateVarWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateVar.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TemplateVarController.find"
      }
    },
    "/templates/getPreSignedUrl": {
      "post": {
        "x-controller-name": "Template",
        "x-operation-name": "generatePreSignedUrl",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TemplateController.generatePreSignedUrl"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TemplateController.generatePreSignedUrl"
      }
    },
    "/templates/{id}": {
      "delete": {
        "x-controller-name": "Template",
        "x-operation-name": "deleteById",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Template DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TemplateController.deleteById"
      }
    },
    "/templates": {
      "post": {
        "x-controller-name": "Template",
        "x-operation-name": "login",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TemplateController.login"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTemplate"
              }
            }
          }
        },
        "operationId": "TemplateController.login"
      },
      "get": {
        "x-controller-name": "Template",
        "x-operation-name": "find",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Array of Template model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TemplateController.find"
      }
    },
    "/tenantadmin": {
      "post": {
        "x-controller-name": "Tenant",
        "x-operation-name": "createTenant",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenant"
              }
            }
          }
        },
        "operationId": "TenantController.createTenant"
      }
    },
    "/tenants/{id}": {
      "patch": {
        "x-controller-name": "Tenant",
        "x-operation-name": "updateById",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tenant PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TenantController.updateById"
      }
    },
    "/tenants/{tenantId}": {
      "delete": {
        "x-controller-name": "Tenant",
        "x-operation-name": "deleteTenant",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tenant Successful deleted"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TenantController.deleteTenant"
      }
    },
    "/tenants": {
      "get": {
        "x-controller-name": "Tenant",
        "x-operation-name": "find",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TenantController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TenantController.find"
      }
    },
    "/uoms/{id}": {
      "patch": {
        "x-controller-name": "Uom",
        "x-operation-name": "updateById",
        "tags": [
          "UomController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Uom PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UomPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "UomController.updateById"
      },
      "delete": {
        "x-controller-name": "Uom",
        "x-operation-name": "deleteById",
        "tags": [
          "UomController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Uom DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UomController.deleteById"
      }
    },
    "/uoms": {
      "post": {
        "x-controller-name": "Uom",
        "x-operation-name": "create",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "Uom model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uom"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUom"
              }
            }
          }
        },
        "operationId": "UomController.create"
      },
      "get": {
        "x-controller-name": "Uom",
        "x-operation-name": "find",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "Array of Uom model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UomWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uom.Filter"
                }
              }
            }
          }
        ],
        "operationId": "UomController.find"
      }
    },
    "/users/forget-password": {
      "post": {
        "x-controller-name": "Auth",
        "x-operation-name": "forgetPassword",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.forgetPassword"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.forgetPassword"
      }
    },
    "/users/reset-password": {
      "post": {
        "x-controller-name": "Auth",
        "x-operation-name": "resetPassword",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.resetPassword"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.resetPassword"
      }
    },
    "/users/{id}": {
      "patch": {
        "x-controller-name": "Auth",
        "x-operation-name": "updateById",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AuthController.updateById"
      }
    },
    "/users": {
      "post": {
        "x-controller-name": "Auth",
        "x-operation-name": "create",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.create"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.create"
      },
      "get": {
        "x-controller-name": "Auth",
        "x-operation-name": "find",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.find"
      }
    },
    "/webhooks": {
      "post": {
        "x-controller-name": "Webhook",
        "x-operation-name": "create",
        "tags": [
          "WebhookController"
        ],
        "responses": {
          "200": {
            "description": "Webhook model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWebhook"
              }
            }
          }
        },
        "operationId": "WebhookController.create"
      },
      "get": {
        "x-controller-name": "Webhook",
        "x-operation-name": "find",
        "tags": [
          "WebhookController"
        ],
        "responses": {
          "200": {
            "description": "Array of Webhook model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook.Filter"
                }
              }
            }
          }
        ],
        "operationId": "WebhookController.find"
      }
    },
    "/whoami": {
      "get": {
        "x-controller-name": "Auth",
        "x-operation-name": "whoami",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.whoami"
          }
        },
        "operationId": "AuthController.whoami"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ActionWithRelations": {
        "title": "ActionWithRelations",
        "type": "object",
        "description": "(tsType: ActionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "module": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "route": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "module",
          "method",
          "route",
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ActionWithRelations"
      },
      "Feature": {
        "title": "Feature",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "basePrice": {
            "type": "number"
          },
          "status": {
            "type": "number"
          },
          "uomId": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "status"
        ],
        "additionalProperties": false
      },
      "NewFeature": {
        "title": "NewFeature",
        "type": "object",
        "description": "(tsType: Feature, schemaOptions: { title: 'NewFeature' })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "basePrice": {
            "type": "number"
          },
          "status": {
            "type": "number"
          },
          "uomId": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Feature"
      },
      "FeatureWithRelations": {
        "title": "FeatureWithRelations",
        "type": "object",
        "description": "(tsType: FeatureWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "basePrice": {
            "type": "number"
          },
          "status": {
            "type": "number"
          },
          "uomId": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "FeatureWithRelations"
      },
      "FeaturePartial": {
        "title": "FeaturePartial",
        "type": "object",
        "description": "(tsType: Partial<Feature>, schemaOptions: { partial: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "basePrice": {
            "type": "number"
          },
          "status": {
            "type": "number"
          },
          "uomId": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Feature>"
      },
      "Menu": {
        "title": "Menu",
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "routeTo": {
            "type": "string"
          },
          "level": {
            "type": "number"
          },
          "sequence": {
            "type": "number"
          },
          "upLabel": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "level",
          "sequence",
          "status",
          "productId"
        ],
        "additionalProperties": false
      },
      "NewMenu": {
        "title": "NewMenu",
        "type": "object",
        "description": "(tsType: Menu, schemaOptions: { title: 'NewMenu' })",
        "properties": {
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "routeTo": {
            "type": "string"
          },
          "level": {
            "type": "number"
          },
          "sequence": {
            "type": "number"
          },
          "upLabel": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "level",
          "sequence",
          "status",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Menu"
      },
      "MenuWithRelations": {
        "title": "MenuWithRelations",
        "type": "object",
        "description": "(tsType: MenuWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "routeTo": {
            "type": "string"
          },
          "level": {
            "type": "number"
          },
          "sequence": {
            "type": "number"
          },
          "upLabel": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "level",
          "sequence",
          "status",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "MenuWithRelations"
      },
      "MicroservicesWithRelations": {
        "title": "MicroservicesWithRelations",
        "type": "object",
        "description": "(tsType: MicroservicesWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "healthCheckUrl": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "port",
          "healthCheckUrl",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "MicroservicesWithRelations"
      },
      "Microservices": {
        "title": "Microservices",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "healthCheckUrl": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "port",
          "healthCheckUrl",
          "productId"
        ],
        "additionalProperties": false
      },
      "NewMicroservices": {
        "title": "NewMicroservices",
        "type": "object",
        "description": "(tsType: Microservices, schemaOptions: { title: 'NewMicroservices' })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "healthCheckUrl": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "port",
          "healthCheckUrl",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Microservices"
      },
      "NotificationWithRelations": {
        "title": "NotificationWithRelations",
        "type": "object",
        "description": "(tsType: NotificationWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "notificationId": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "type": {
            "type": "number"
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          },
          "receiver": {
            "type": "object"
          },
          "options": {
            "type": "object"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "type",
          "receiver"
        ],
        "additionalProperties": false,
        "x-typescript-type": "NotificationWithRelations"
      },
      "PolicyWithRelations": {
        "title": "PolicyWithRelations",
        "type": "object",
        "description": "(tsType: PolicyWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "isAllowed": {
            "type": "boolean"
          },
          "action": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "menu": {
            "type": "object"
          },
          "policyId": {
            "type": "string"
          },
          "isTemplate": {
            "type": "boolean"
          }
        },
        "required": [
          "role",
          "isAllowed",
          "menu"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PolicyWithRelations"
      },
      "ProductRatePlanComponentWithRelations": {
        "title": "ProductRatePlanComponentWithRelations",
        "type": "object",
        "description": "(tsType: ProductRatePlanComponentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "productRatePlanComponentId": {
            "type": "string"
          },
          "chargeModel": {
            "type": "number"
          },
          "chargeType": {
            "type": "number"
          },
          "defaultQuantity": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "listPriceBase": {
            "type": "number"
          },
          "minQuantity": {
            "type": "number"
          },
          "maxQuantity": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "productRatePlanId": {
            "type": "string"
          }
        },
        "required": [
          "productRatePlanComponentId",
          "chargeModel",
          "chargeType",
          "listPriceBase",
          "name",
          "uom",
          "productRatePlanId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductRatePlanComponentWithRelations"
      },
      "ProductRatePlanComponent": {
        "title": "ProductRatePlanComponent",
        "type": "object",
        "properties": {
          "productRatePlanComponentId": {
            "type": "string"
          },
          "chargeModel": {
            "type": "number"
          },
          "chargeType": {
            "type": "number"
          },
          "defaultQuantity": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "listPriceBase": {
            "type": "number"
          },
          "minQuantity": {
            "type": "number"
          },
          "maxQuantity": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "productRatePlanId": {
            "type": "string"
          }
        },
        "required": [
          "productRatePlanComponentId",
          "chargeModel",
          "chargeType",
          "listPriceBase",
          "name",
          "uom",
          "productRatePlanId"
        ],
        "additionalProperties": false
      },
      "NewProductRatePlanComponent": {
        "title": "NewProductRatePlanComponent",
        "type": "object",
        "description": "(tsType: Omit<ProductRatePlanComponent, 'productRatePlanComponentId'>, schemaOptions: { title: 'NewProductRatePlanComponent', exclude: [ 'productRatePlanComponentId' ] })",
        "properties": {
          "chargeModel": {
            "type": "number"
          },
          "chargeType": {
            "type": "number"
          },
          "defaultQuantity": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "listPriceBase": {
            "type": "number"
          },
          "minQuantity": {
            "type": "number"
          },
          "maxQuantity": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "productRatePlanId": {
            "type": "string"
          }
        },
        "required": [
          "chargeModel",
          "chargeType",
          "listPriceBase",
          "name",
          "uom",
          "productRatePlanId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<ProductRatePlanComponent, 'productRatePlanComponentId'>"
      },
      "ProductRatePlan": {
        "title": "ProductRatePlan",
        "type": "object",
        "properties": {
          "productRatePlanId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "productRatePlanId",
          "name",
          "effectiveFromDate",
          "status",
          "productId"
        ],
        "additionalProperties": false
      },
      "NewProductRatePlan": {
        "title": "NewProductRatePlan",
        "type": "object",
        "description": "(tsType: Omit<ProductRatePlan, 'productRatePlanId'>, schemaOptions: { title: 'NewProductRatePlan', exclude: [ 'productRatePlanId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "effectiveFromDate",
          "status",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<ProductRatePlan, 'productRatePlanId'>"
      },
      "ProductRatePlanWithRelations": {
        "title": "ProductRatePlanWithRelations",
        "type": "object",
        "description": "(tsType: ProductRatePlanWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "productRatePlanId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "productRatePlanId",
          "name",
          "effectiveFromDate",
          "status",
          "productId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductRatePlanWithRelations"
      },
      "ProductWithRelations": {
        "title": "ProductWithRelations",
        "type": "object",
        "description": "(tsType: ProductWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "productId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industryType": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "features": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "industryType",
          "effectiveFromDate",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductWithRelations"
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industryType": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "features": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "industryType",
          "effectiveFromDate",
          "status"
        ],
        "additionalProperties": false
      },
      "NewProduct": {
        "title": "NewProduct",
        "type": "object",
        "description": "(tsType: Omit<Product, 'product_id'>, schemaOptions: { title: 'NewProduct', exclude: [ 'product_id' ] })",
        "properties": {
          "productId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industryType": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "features": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "industryType",
          "effectiveFromDate",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Product, 'product_id'>"
      },
      "ProductPartial": {
        "title": "ProductPartial",
        "type": "object",
        "description": "(tsType: Partial<Product>, schemaOptions: { partial: true })",
        "properties": {
          "productId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industryType": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string"
          },
          "effectiveToDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "features": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Product>"
      },
      "TemplateVarWithRelations": {
        "title": "TemplateVarWithRelations",
        "type": "object",
        "description": "(tsType: TemplateVarWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "variable": {
            "type": "string"
          },
          "constant": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "templateId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TemplateVarWithRelations"
      },
      "NewTemplate": {
        "title": "NewTemplate",
        "type": "object",
        "description": "(tsType: Omit<TemplateDTO, 'templateId'>, schemaOptions: { title: 'NewTemplate', exclude: [ 'templateId' ] })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "communicationType": {
            "type": "number"
          }
        },
        "required": [
          "format",
          "subject",
          "isDefault",
          "communicationType"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<TemplateDTO, 'templateId'>"
      },
      "TemplateDTO": {
        "title": "TemplateDTO",
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "communicationType": {
            "type": "number"
          }
        },
        "required": [
          "format",
          "subject",
          "isDefault",
          "communicationType"
        ],
        "additionalProperties": false
      },
      "TemplateWithRelations": {
        "title": "TemplateWithRelations",
        "type": "object",
        "description": "(tsType: TemplateWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "attachments": {
            "type": "object"
          },
          "isDefault": {
            "type": "boolean"
          },
          "communicationType": {
            "type": "number"
          }
        },
        "required": [
          "format",
          "subject",
          "isDefault",
          "communicationType"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TemplateWithRelations"
      },
      "Tenant": {
        "title": "Tenant",
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "orgName",
          "city",
          "state",
          "country",
          "pincode",
          "timezone",
          "status",
          "productId"
        ],
        "additionalProperties": false
      },
      "NewTenant": {
        "title": "NewTenant",
        "type": "object",
        "description": "(tsType: TenantUser, schemaOptions: { title: 'NewTenant' })",
        "properties": {
          "tenant": {
            "type": "object"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "tenant",
          "user"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TenantUser"
      },
      "TenantUser": {
        "title": "TenantUser",
        "type": "object",
        "properties": {
          "tenant": {
            "type": "object"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "tenant",
          "user"
        ],
        "additionalProperties": false
      },
      "TenantPartial": {
        "title": "TenantPartial",
        "type": "object",
        "description": "(tsType: Partial<Tenant>, schemaOptions: { partial: true })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "productId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Tenant>"
      },
      "Uom": {
        "title": "Uom",
        "type": "object",
        "properties": {
          "uomId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "roundingMode": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "uomId",
          "name",
          "displayAs",
          "decimalPlaces",
          "roundingMode",
          "status"
        ],
        "additionalProperties": false
      },
      "NewUom": {
        "title": "NewUom",
        "type": "object",
        "description": "(tsType: Omit<Uom, 'uomId'>, schemaOptions: { title: 'NewUom', exclude: [ 'uomId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "roundingMode": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "displayAs",
          "decimalPlaces",
          "roundingMode",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Uom, 'uomId'>"
      },
      "UomWithRelations": {
        "title": "UomWithRelations",
        "type": "object",
        "description": "(tsType: UomWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "uomId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "roundingMode": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "uomId",
          "name",
          "displayAs",
          "decimalPlaces",
          "roundingMode",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UomWithRelations"
      },
      "UomPartial": {
        "title": "UomPartial",
        "type": "object",
        "description": "(tsType: Partial<Uom>, schemaOptions: { partial: true })",
        "properties": {
          "uomId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "roundingMode": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Uom>"
      },
      "WebhookWithRelations": {
        "title": "WebhookWithRelations",
        "type": "object",
        "description": "(tsType: WebhookWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "webhookId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "retry": {
            "type": "boolean"
          },
          "body": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "url",
          "methodType",
          "contentType",
          "retry"
        ],
        "additionalProperties": false,
        "x-typescript-type": "WebhookWithRelations"
      },
      "WebhookDTO": {
        "title": "WebhookDTO",
        "type": "object",
        "properties": {
          "webhookId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "retry": {
            "type": "boolean"
          },
          "queryParams": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "authorisation": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "body": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "name",
          "url",
          "methodType",
          "contentType",
          "retry"
        ],
        "additionalProperties": false
      },
      "NewWebhook": {
        "title": "NewWebhook",
        "type": "object",
        "description": "(tsType: Omit<WebhookDTO, 'webhookId'>, schemaOptions: { title: 'NewWebhook', exclude: [ 'webhookId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "retry": {
            "type": "boolean"
          },
          "queryParams": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "authorisation": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "body": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "name",
          "url",
          "methodType",
          "contentType",
          "retry"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<WebhookDTO, 'webhookId'>"
      },
      "Action.Filter": {
        "type": "object",
        "title": "Action.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Action.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "module": {
                    "type": "boolean"
                  },
                  "method": {
                    "type": "boolean"
                  },
                  "route": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "module",
                    "method",
                    "route",
                    "name"
                  ],
                  "example": "module"
                },
                "uniqueItems": true
              }
            ],
            "title": "Action.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Action>"
      },
      "Feature.Filter": {
        "type": "object",
        "title": "Feature.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Feature.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "basePrice": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "uomId": {
                    "type": "boolean"
                  },
                  "uom": {
                    "type": "boolean"
                  },
                  "featureId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "basePrice",
                    "status",
                    "uomId",
                    "uom",
                    "featureId"
                  ],
                  "example": "name"
                },
                "uniqueItems": true
              }
            ],
            "title": "Feature.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Feature>"
      },
      "Menu.Filter": {
        "type": "object",
        "title": "Menu.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Menu.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "boolean"
                  },
                  "icon": {
                    "type": "boolean"
                  },
                  "routeTo": {
                    "type": "boolean"
                  },
                  "level": {
                    "type": "boolean"
                  },
                  "sequence": {
                    "type": "boolean"
                  },
                  "upLabel": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "label",
                    "icon",
                    "routeTo",
                    "level",
                    "sequence",
                    "upLabel",
                    "status",
                    "productId"
                  ],
                  "example": "label"
                },
                "uniqueItems": true
              }
            ],
            "title": "Menu.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Menu>"
      },
      "Microservices.Filter": {
        "type": "object",
        "title": "Microservices.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Microservices.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "port": {
                    "type": "boolean"
                  },
                  "healthCheckUrl": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "port",
                    "healthCheckUrl",
                    "productId"
                  ],
                  "example": "name"
                },
                "uniqueItems": true
              }
            ],
            "title": "Microservices.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Microservices>"
      },
      "Notification.Filter": {
        "type": "object",
        "title": "Notification.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Notification.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "notificationId": {
                    "type": "boolean"
                  },
                  "sender": {
                    "type": "boolean"
                  },
                  "subject": {
                    "type": "boolean"
                  },
                  "body": {
                    "type": "boolean"
                  },
                  "templateId": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "sentDate": {
                    "type": "boolean"
                  },
                  "receiver": {
                    "type": "boolean"
                  },
                  "options": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "notificationId",
                    "sender",
                    "subject",
                    "body",
                    "templateId",
                    "type",
                    "sentDate",
                    "receiver",
                    "options",
                    "status"
                  ],
                  "example": "notificationId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Notification.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Notification>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Policy.Filter": {
        "type": "object",
        "title": "Policy.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Policy.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "boolean"
                  },
                  "role": {
                    "type": "boolean"
                  },
                  "isAllowed": {
                    "type": "boolean"
                  },
                  "action": {
                    "type": "boolean"
                  },
                  "resources": {
                    "type": "boolean"
                  },
                  "page": {
                    "type": "boolean"
                  },
                  "menu": {
                    "type": "boolean"
                  },
                  "policyId": {
                    "type": "boolean"
                  },
                  "isTemplate": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tenantId",
                    "role",
                    "isAllowed",
                    "action",
                    "resources",
                    "page",
                    "menu",
                    "policyId",
                    "isTemplate"
                  ],
                  "example": "tenantId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Policy.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Policy>"
      },
      "ProductRatePlanComponent.Filter": {
        "type": "object",
        "title": "ProductRatePlanComponent.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ProductRatePlanComponent.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "productRatePlanComponentId": {
                    "type": "boolean"
                  },
                  "chargeModel": {
                    "type": "boolean"
                  },
                  "chargeType": {
                    "type": "boolean"
                  },
                  "defaultQuantity": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "includedUnits": {
                    "type": "boolean"
                  },
                  "listPriceBase": {
                    "type": "boolean"
                  },
                  "minQuantity": {
                    "type": "boolean"
                  },
                  "maxQuantity": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "uom": {
                    "type": "boolean"
                  },
                  "productRatePlanId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "productRatePlanComponentId",
                    "chargeModel",
                    "chargeType",
                    "defaultQuantity",
                    "description",
                    "includedUnits",
                    "listPriceBase",
                    "minQuantity",
                    "maxQuantity",
                    "name",
                    "uom",
                    "productRatePlanId"
                  ],
                  "example": "productRatePlanComponentId"
                },
                "uniqueItems": true
              }
            ],
            "title": "ProductRatePlanComponent.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ProductRatePlanComponent>"
      },
      "ProductRatePlan.Filter": {
        "type": "object",
        "title": "ProductRatePlan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ProductRatePlan.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "productRatePlanId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "effectiveFromDate": {
                    "type": "boolean"
                  },
                  "effectiveToDate": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "productRatePlanId",
                    "name",
                    "description",
                    "effectiveFromDate",
                    "effectiveToDate",
                    "status",
                    "productId"
                  ],
                  "example": "productRatePlanId"
                },
                "uniqueItems": true
              }
            ],
            "title": "ProductRatePlan.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ProductRatePlan>"
      },
      "Product.Filter": {
        "type": "object",
        "title": "Product.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Product.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "industryType": {
                    "type": "boolean"
                  },
                  "effectiveFromDate": {
                    "type": "boolean"
                  },
                  "effectiveToDate": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "features": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "productId",
                    "name",
                    "description",
                    "industryType",
                    "effectiveFromDate",
                    "effectiveToDate",
                    "status",
                    "features"
                  ],
                  "example": "productId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Product.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Product>"
      },
      "TemplateVar.Filter": {
        "type": "object",
        "title": "TemplateVar.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "TemplateVar.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "boolean"
                  },
                  "entity": {
                    "type": "boolean"
                  },
                  "variable": {
                    "type": "boolean"
                  },
                  "constant": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "templateId",
                    "entity",
                    "variable",
                    "constant",
                    "url"
                  ],
                  "example": "templateId"
                },
                "uniqueItems": true
              }
            ],
            "title": "TemplateVar.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<TemplateVar>"
      },
      "Template.Filter": {
        "type": "object",
        "title": "Template.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Template.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "format": {
                    "type": "boolean"
                  },
                  "subject": {
                    "type": "boolean"
                  },
                  "content": {
                    "type": "boolean"
                  },
                  "attachments": {
                    "type": "boolean"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "communicationType": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "templateId",
                    "tenantId",
                    "category",
                    "format",
                    "subject",
                    "content",
                    "attachments",
                    "isDefault",
                    "communicationType"
                  ],
                  "example": "templateId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Template.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Template>"
      },
      "Tenant.Filter": {
        "type": "object",
        "title": "Tenant.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Tenant.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "boolean"
                  },
                  "orgName": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "pincode": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tenantId",
                    "orgName",
                    "address",
                    "city",
                    "state",
                    "country",
                    "pincode",
                    "timezone",
                    "status",
                    "productId"
                  ],
                  "example": "tenantId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Tenant.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tenant>"
      },
      "Uom.Filter": {
        "type": "object",
        "title": "Uom.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Uom.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "uomId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "displayAs": {
                    "type": "boolean"
                  },
                  "decimalPlaces": {
                    "type": "boolean"
                  },
                  "roundingMode": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "uomId",
                    "name",
                    "displayAs",
                    "decimalPlaces",
                    "roundingMode",
                    "status"
                  ],
                  "example": "uomId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Uom.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Uom>"
      },
      "User.Filter": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "User.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "password": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "refreshToken": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "userId",
                    "tenantId",
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "status",
                    "refreshToken",
                    "productId"
                  ],
                  "example": "userId"
                },
                "uniqueItems": true
              }
            ],
            "title": "User.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      },
      "Webhook.Filter": {
        "type": "object",
        "title": "Webhook.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Webhook.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "webhookId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "boolean"
                  },
                  "methodType": {
                    "type": "boolean"
                  },
                  "contentType": {
                    "type": "boolean"
                  },
                  "retry": {
                    "type": "boolean"
                  },
                  "body": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "webhookId",
                    "name",
                    "description",
                    "url",
                    "methodType",
                    "contentType",
                    "retry",
                    "body"
                  ],
                  "example": "webhookId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Webhook.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Webhook>"
      }
    }
  },
  "security": [
    {
      "jwt": []
    }
  ],
  "servers": [
    {
      "url": "/"
    }
  ]
}