{
  "openapi": "3.0.0",
  "info": {
    "title": "BillHive",
    "version": "0.0.1",
    "description": "facades",
    "contact": {
      "name": "Mohit Aggarwal",
      "email": "mohitetc2008@gmail.com"
    }
  },
  "paths": {
    "/accounts/register": {
      "post": {
        "x-controller-name": "AccountController",
        "x-operation-name": "register",
        "tags": [
          "AccountController"
        ],
        "responses": {
          "200": {
            "description": "Account model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccount"
              }
            }
          }
        },
        "operationId": "AccountController.register"
      }
    },
    "/accounts/{id}": {
      "patch": {
        "x-controller-name": "AccountController",
        "x-operation-name": "updateById",
        "tags": [
          "AccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Account PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AccountController.updateById"
      },
      "get": {
        "x-controller-name": "AccountController",
        "x-operation-name": "findById",
        "tags": [
          "AccountController"
        ],
        "responses": {
          "200": {
            "description": "Account model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AccountController.findById"
      },
      "delete": {
        "x-controller-name": "AccountController",
        "x-operation-name": "deleteById",
        "tags": [
          "AccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Account DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "AccountController.deleteById"
      }
    },
    "/accounts": {
      "post": {
        "x-controller-name": "AccountController",
        "x-operation-name": "create",
        "tags": [
          "AccountController"
        ],
        "responses": {
          "200": {
            "description": "Account model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccount"
              }
            }
          }
        },
        "operationId": "AccountController.create"
      },
      "get": {
        "x-controller-name": "AccountController",
        "x-operation-name": "find",
        "tags": [
          "AccountController"
        ],
        "responses": {
          "200": {
            "description": "Array of Account model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AccountController.find"
      }
    },
    "/actions": {
      "get": {
        "x-controller-name": "ActionController",
        "x-operation-name": "find",
        "tags": [
          "ActionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Action model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ActionController.find"
      }
    },
    "/cb-payment-success": {
      "post": {
        "x-controller-name": "CallbackUrlsController",
        "x-operation-name": "cbPaymentSuccess",
        "tags": [
          "CallbackUrlsController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "CallbackUrlsController.cbPaymentSuccess"
      }
    },
    "/features/{id}": {
      "patch": {
        "x-controller-name": "FeatureController",
        "x-operation-name": "updateById",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Feature PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeaturePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FeatureController.updateById"
      },
      "delete": {
        "x-controller-name": "FeatureController",
        "x-operation-name": "deleteById",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Feature DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FeatureController.deleteById"
      }
    },
    "/features": {
      "post": {
        "x-controller-name": "FeatureController",
        "x-operation-name": "create",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "200": {
            "description": "Feature model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFeature"
              }
            }
          }
        },
        "operationId": "FeatureController.create"
      },
      "get": {
        "x-controller-name": "FeatureController",
        "x-operation-name": "find",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "200": {
            "description": "Array of Feature model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeatureWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FeatureController.find"
      }
    },
    "/forget-password": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "forgetPassword",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.forgetPassword"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPassword"
              }
            }
          }
        },
        "operationId": "AuthController.forgetPassword"
      }
    },
    "/login": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "login",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Users model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          }
        },
        "operationId": "AuthController.login"
      }
    },
    "/menu/formatted": {
      "get": {
        "x-controller-name": "MenuController",
        "x-operation-name": "findFormatted",
        "tags": [
          "MenuController"
        ],
        "responses": {
          "200": {
            "description": "Return value of MenuController.findFormatted"
          }
        },
        "operationId": "MenuController.findFormatted"
      }
    },
    "/menu": {
      "post": {
        "x-controller-name": "MenuController",
        "x-operation-name": "create",
        "tags": [
          "MenuController"
        ],
        "responses": {
          "200": {
            "description": "Menu model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMenu"
              }
            }
          }
        },
        "operationId": "MenuController.create"
      },
      "get": {
        "x-controller-name": "MenuController",
        "x-operation-name": "find",
        "tags": [
          "MenuController"
        ],
        "responses": {
          "200": {
            "description": "Array of Menu model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu.Filter"
                }
              }
            }
          }
        ],
        "operationId": "MenuController.find"
      }
    },
    "/metadata/{variable}": {
      "get": {
        "x-controller-name": "MetaDataController",
        "x-operation-name": "find",
        "tags": [
          "MetaDataController"
        ],
        "responses": {
          "200": {
            "description": "Array of Feature model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "variable",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "MetaDataController.find"
      }
    },
    "/mytenant": {
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "findMyTenant",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantWithRelations"
                }
              }
            }
          }
        },
        "operationId": "TenantController.findMyTenant"
      }
    },
    "/notifications": {
      "get": {
        "x-controller-name": "NotificationController",
        "x-operation-name": "find",
        "tags": [
          "NotificationController"
        ],
        "responses": {
          "200": {
            "description": "Array of Notification model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification.Filter"
                }
              }
            }
          }
        ],
        "operationId": "NotificationController.find"
      }
    },
    "/openapi/actions": {
      "get": {
        "x-controller-name": "ActionController",
        "x-operation-name": "createActionsFromOpenapi",
        "tags": [
          "ActionController"
        ],
        "description": "fetch endpoints from openapi.json of current service and store as Actions",
        "responses": {
          "200": {
            "description": "Successful execution",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "ActionController.createActionsFromOpenapi"
      }
    },
    "/payments": {
      "get": {
        "x-controller-name": "PaymentController",
        "x-operation-name": "find",
        "tags": [
          "PaymentController"
        ],
        "responses": {
          "200": {
            "description": "Array of Payment model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PaymentController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/policies/{id}": {
      "patch": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "updateById",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Policy PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PolicyController.updateById"
      },
      "delete": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "deleteById",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Policy DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "PolicyController.deleteById"
      }
    },
    "/policies/{roleId}": {
      "get": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "findByRoleId",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Array of Policy model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "PolicyController.findByRoleId"
      }
    },
    "/policies": {
      "post": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "create",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Policy model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPolicy"
              }
            }
          }
        },
        "operationId": "PolicyController.create"
      },
      "get": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "find",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Array of Policy model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PolicyController.find"
      }
    },
    "/product-rate-plan-components/{id}": {
      "delete": {
        "x-controller-name": "ProductRatePlanComponentController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductRatePlanComponentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "product-rate-plan-components DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductRatePlanComponentController.deleteById"
      }
    },
    "/product-rate-plan-components": {
      "post": {
        "x-controller-name": "ProductRatePlanComponentController",
        "x-operation-name": "create",
        "tags": [
          "ProductRatePlanComponentController"
        ],
        "responses": {
          "200": {
            "description": "ProductRatePlanComponent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlanComponent"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductRatePlanComponent"
              }
            }
          }
        },
        "operationId": "ProductRatePlanComponentController.create"
      }
    },
    "/product-rate-plans/{id}": {
      "delete": {
        "x-controller-name": "ProductRatePlanController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductRatePlanController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "product-rate-plan DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductRatePlanController.deleteById"
      }
    },
    "/product-rate-plans": {
      "post": {
        "x-controller-name": "ProductRatePlanController",
        "x-operation-name": "create",
        "tags": [
          "ProductRatePlanController"
        ],
        "responses": {
          "200": {
            "description": "ProductRatePlan model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlan"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductRatePlan"
              }
            }
          }
        },
        "operationId": "ProductRatePlanController.create"
      }
    },
    "/products/{id}": {
      "patch": {
        "x-controller-name": "ProductController",
        "x-operation-name": "updateById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductController.updateById"
      },
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "findById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.findById"
      },
      "delete": {
        "x-controller-name": "ProductController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductController.deleteById"
      }
    },
    "/products": {
      "post": {
        "x-controller-name": "ProductController",
        "x-operation-name": "create",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "operationId": "ProductController.create"
      },
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "find",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Array of Product model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.find"
      }
    },
    "/refreshToken": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "refresh",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Reissuing Access Token",
          "required": true
        },
        "operationId": "AuthController.refresh"
      }
    },
    "/reset-password": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "resetPassword",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Users model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.resetPassword"
      }
    },
    "/roles": {
      "post": {
        "x-controller-name": "RoleController",
        "x-operation-name": "create",
        "tags": [
          "RoleController"
        ],
        "responses": {
          "200": {
            "description": "Role model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRole"
              }
            }
          }
        },
        "operationId": "RoleController.create"
      },
      "get": {
        "x-controller-name": "RoleController",
        "x-operation-name": "find",
        "tags": [
          "RoleController"
        ],
        "responses": {
          "200": {
            "description": "Array of Action model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role.Filter"
                }
              }
            }
          }
        ],
        "operationId": "RoleController.find"
      }
    },
    "/template-vars": {
      "get": {
        "x-controller-name": "TemplateVarController",
        "x-operation-name": "find",
        "tags": [
          "TemplateVarController"
        ],
        "responses": {
          "200": {
            "description": "Array of TemplateVar model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateVarWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateVar.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TemplateVarController.find"
      }
    },
    "/templates/getPreSignedUrl": {
      "post": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "generatePreSignedUrl",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TemplateController.generatePreSignedUrl"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TemplateController.generatePreSignedUrl"
      }
    },
    "/templates/{id}/mergefields": {
      "get": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "getMergedFields",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TemplateController.getMergedFields"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TemplateController.getMergedFields"
      }
    },
    "/templates/{id}": {
      "delete": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "deleteById",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Template DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TemplateController.deleteById"
      }
    },
    "/templates": {
      "post": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "login",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TemplateController.login"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTemplate"
              }
            }
          }
        },
        "operationId": "TemplateController.login"
      },
      "get": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "find",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Array of Template model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TemplateController.find"
      }
    },
    "/tenants/{id}": {
      "patch": {
        "x-controller-name": "TenantController",
        "x-operation-name": "updateById",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tenant PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TenantController.updateById"
      },
      "delete": {
        "x-controller-name": "TenantController",
        "x-operation-name": "deleteById",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tenant Successful deleted"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TenantController.deleteById"
      }
    },
    "/tenants": {
      "post": {
        "x-controller-name": "TenantController",
        "x-operation-name": "create",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenant"
              }
            }
          }
        },
        "operationId": "TenantController.create"
      },
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "find",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TenantController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TenantController.find"
      }
    },
    "/uoms/{id}": {
      "patch": {
        "x-controller-name": "UomController",
        "x-operation-name": "updateById",
        "tags": [
          "UomController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Uom PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UomPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "UomController.updateById"
      },
      "delete": {
        "x-controller-name": "UomController",
        "x-operation-name": "deleteById",
        "tags": [
          "UomController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Uom DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UomController.deleteById"
      }
    },
    "/uoms": {
      "post": {
        "x-controller-name": "UomController",
        "x-operation-name": "create",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "Uom model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uom"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUom"
              }
            }
          }
        },
        "operationId": "UomController.create"
      },
      "get": {
        "x-controller-name": "UomController",
        "x-operation-name": "find",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "Array of Uom model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UomWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uom.Filter"
                }
              }
            }
          }
        ],
        "operationId": "UomController.find"
      }
    },
    "/users/count": {
      "get": {
        "x-controller-name": "UserController",
        "x-operation-name": "count",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "Return value of UserController.count"
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "User.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<User>"
                }
              }
            }
          }
        ],
        "operationId": "UserController.count"
      }
    },
    "/users/{id}": {
      "patch": {
        "x-controller-name": "UserController",
        "x-operation-name": "updateById",
        "tags": [
          "UserController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "UserController.updateById"
      },
      "delete": {
        "x-controller-name": "UserController",
        "x-operation-name": "deleteById",
        "tags": [
          "UserController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UserController.deleteById"
      }
    },
    "/users": {
      "post": {
        "x-controller-name": "UserController",
        "x-operation-name": "create",
        "tags": [
          "UserController"
        ],
        "description": "Create User",
        "responses": {
          "200": {
            "description": "Successful execution",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "operationId": "UserController.create"
      },
      "get": {
        "x-controller-name": "UserController",
        "x-operation-name": "find",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "Return value of UserController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter"
                }
              }
            }
          }
        ],
        "operationId": "UserController.find"
      }
    },
    "/webhooks": {
      "post": {
        "x-controller-name": "WebhookController",
        "x-operation-name": "create",
        "tags": [
          "WebhookController"
        ],
        "responses": {
          "200": {
            "description": "Webhook model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWebhook"
              }
            }
          }
        },
        "operationId": "WebhookController.create"
      },
      "get": {
        "x-controller-name": "WebhookController",
        "x-operation-name": "find",
        "tags": [
          "WebhookController"
        ],
        "responses": {
          "200": {
            "description": "Array of Webhook model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook.Filter"
                }
              }
            }
          }
        ],
        "operationId": "WebhookController.find"
      }
    },
    "/whoami": {
      "get": {
        "x-controller-name": "AuthController",
        "x-operation-name": "whoami",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.whoami"
          }
        },
        "operationId": "AuthController.whoami"
      }
    },
    "/{accountId}/contacts": {
      "post": {
        "x-controller-name": "ContactController",
        "x-operation-name": "create",
        "tags": [
          "ContactController"
        ],
        "responses": {
          "200": {
            "description": "Contact model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewContact"
              }
            }
          }
        },
        "operationId": "ContactController.create"
      },
      "get": {
        "x-controller-name": "ContactController",
        "x-operation-name": "find",
        "tags": [
          "ContactController"
        ],
        "responses": {
          "200": {
            "description": "Array of Contact model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ContactController.find"
      }
    },
    "/{accountId}/invoices": {
      "get": {
        "x-controller-name": "InvoiceController",
        "x-operation-name": "find",
        "tags": [
          "InvoiceController"
        ],
        "responses": {
          "200": {
            "description": "Array of Invoice model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice.Filter"
                }
              }
            }
          }
        ],
        "operationId": "InvoiceController.find"
      }
    },
    "/{productRatePlanId}/product-rate-plan-components": {
      "get": {
        "x-controller-name": "ProductRatePlanComponentController",
        "x-operation-name": "find",
        "tags": [
          "ProductRatePlanComponentController"
        ],
        "responses": {
          "200": {
            "description": "Array of ProductRatePlanComponent model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductRatePlanComponentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "productRatePlanId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlanComponent.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductRatePlanComponentController.find"
      }
    },
    "/{productId}/product-rate-plans": {
      "get": {
        "x-controller-name": "ProductRatePlanController",
        "x-operation-name": "find",
        "tags": [
          "ProductRatePlanController"
        ],
        "responses": {
          "200": {
            "description": "Array of ProductRatePlan model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductRatePlanWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlan.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductRatePlanController.find"
      }
    },
    "/{ratePlanId}/rate-plan-components": {
      "get": {
        "x-controller-name": "RatePlanComponentController",
        "x-operation-name": "find",
        "tags": [
          "RatePlanComponentController"
        ],
        "responses": {
          "200": {
            "description": "Array of RatePlanComponent model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatePlanComponentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ratePlanId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatePlanComponent.Filter"
                }
              }
            }
          }
        ],
        "operationId": "RatePlanComponentController.find"
      }
    },
    "/{subscriptionId}/rate-plans": {
      "get": {
        "x-controller-name": "RatePlanController",
        "x-operation-name": "find",
        "tags": [
          "RatePlanController"
        ],
        "responses": {
          "200": {
            "description": "Array of Feature model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatePlanWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatePlan.Filter"
                }
              }
            }
          }
        ],
        "operationId": "RatePlanController.find"
      }
    },
    "/{accountId}/subscriptions": {
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "find",
        "tags": [
          "SubscriptionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Feature model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.find"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Account": {
        "title": "Account",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "orgName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "Organisation",
              "Individual"
            ]
          },
          "parentAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "billToId": {
            "type": "string",
            "format": "uuid"
          },
          "soldToId": {
            "type": "string",
            "format": "uuid"
          },
          "autoPay": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "creditBalance": {
            "type": "number"
          },
          "communicationPreference": {
            "type": "string",
            "enum": [
              "Email",
              "Letter"
            ]
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "format": "uuid"
          },
          "lastInvoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentTerm": {
            "type": "string",
            "enum": [
              "Due Upon Receipt",
              "Net Payment Term",
              "Prox Payment Term"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "required": [
          "accountId",
          "accountType",
          "billToId",
          "soldToId",
          "currency",
          "balance",
          "tenantId",
          "status"
        ],
        "additionalProperties": false
      },
      "NewAccount": {
        "title": "NewAccount",
        "type": "object",
        "description": "(tsType: RegisterAccount, schemaOptions: { title: 'NewAccount' })",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productRatePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "mobilePhone",
          "orgName",
          "productId",
          "productRatePlanId",
          "currency"
        ],
        "additionalProperties": false,
        "x-typescript-type": "RegisterAccount"
      },
      "RegisterAccount": {
        "title": "RegisterAccount",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productRatePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "mobilePhone",
          "orgName",
          "productId",
          "productRatePlanId",
          "currency"
        ],
        "additionalProperties": false
      },
      "AccountWithRelations": {
        "title": "AccountWithRelations",
        "type": "object",
        "description": "(tsType: AccountWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "orgName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "Organisation",
              "Individual"
            ]
          },
          "parentAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "billToId": {
            "type": "string",
            "format": "uuid"
          },
          "soldToId": {
            "type": "string",
            "format": "uuid"
          },
          "autoPay": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "creditBalance": {
            "type": "number"
          },
          "communicationPreference": {
            "type": "string",
            "enum": [
              "Email",
              "Letter"
            ]
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "format": "uuid"
          },
          "lastInvoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentTerm": {
            "type": "string",
            "enum": [
              "Due Upon Receipt",
              "Net Payment Term",
              "Prox Payment Term"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "required": [
          "accountId",
          "accountType",
          "billToId",
          "soldToId",
          "currency",
          "balance",
          "tenantId",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AccountWithRelations"
      },
      "AccountPartial": {
        "title": "AccountPartial",
        "type": "object",
        "description": "(tsType: Partial<Account>, schemaOptions: { partial: true })",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "orgName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "Organisation",
              "Individual"
            ]
          },
          "parentAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "billToId": {
            "type": "string",
            "format": "uuid"
          },
          "soldToId": {
            "type": "string",
            "format": "uuid"
          },
          "autoPay": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "creditBalance": {
            "type": "number"
          },
          "communicationPreference": {
            "type": "string",
            "enum": [
              "Email",
              "Letter"
            ]
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "format": "uuid"
          },
          "lastInvoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentTerm": {
            "type": "string",
            "enum": [
              "Due Upon Receipt",
              "Net Payment Term",
              "Prox Payment Term"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Account>"
      },
      "ActionWithRelations": {
        "title": "ActionWithRelations",
        "type": "object",
        "description": "(tsType: ActionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "module": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "route": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notForTenant": {
            "type": "boolean"
          }
        },
        "required": [
          "module",
          "method",
          "route",
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ActionWithRelations"
      },
      "ErrorMessage": {
        "title": "ErrorMessage",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "statusCode",
          "message"
        ],
        "additionalProperties": false
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorMessage"
          }
        },
        "required": [
          "error"
        ],
        "additionalProperties": false
      },
      "PermissionItem": {
        "title": "PermissionItem",
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resources": {
            "type": "object"
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "title": "Permission",
        "type": "object",
        "properties": {
          "deny": {
            "$ref": "#/components/schemas/PermissionItem"
          },
          "allow": {
            "$ref": "#/components/schemas/PermissionItem"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          },
          "menu": {
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "email",
          "password",
          "roleId",
          "role",
          "permission",
          "status"
        ],
        "additionalProperties": false
      },
      "Credentials": {
        "title": "Credentials",
        "type": "object",
        "description": "(tsType: Credential, schemaOptions: { title: 'Credentials' })",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Credential"
      },
      "Credential": {
        "title": "Credential",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "additionalProperties": false
      },
      "ForgetPassword": {
        "title": "ForgetPassword",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "additionalProperties": false
      },
      "Contact": {
        "title": "Contact",
        "type": "object",
        "properties": {
          "contactId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "Bill To",
              "Sold To",
              "Others",
              "Bill & Sold To"
            ]
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "personalEmail": {
            "type": "string"
          },
          "workEmail": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "required": [
          "contactId",
          "type",
          "firstName",
          "lastName",
          "accountId",
          "mobilePhone",
          "personalEmail",
          "tenantId",
          "status"
        ],
        "additionalProperties": false
      },
      "NewContact": {
        "title": "NewContact",
        "type": "object",
        "description": "(tsType: Omit<Contact, 'contactId' | 'accountId'>, schemaOptions: { title: 'NewContact', exclude: [ 'contactId', 'accountId' ] })",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Bill To",
              "Sold To",
              "Others",
              "Bill & Sold To"
            ]
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "personalEmail": {
            "type": "string"
          },
          "workEmail": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "required": [
          "type",
          "firstName",
          "lastName",
          "mobilePhone",
          "personalEmail",
          "tenantId",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Contact, 'contactId' | 'accountId'>"
      },
      "ContactWithRelations": {
        "title": "ContactWithRelations",
        "type": "object",
        "description": "(tsType: ContactWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "contactId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "Bill To",
              "Sold To",
              "Others",
              "Bill & Sold To"
            ]
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "personalEmail": {
            "type": "string"
          },
          "workEmail": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "required": [
          "contactId",
          "type",
          "firstName",
          "lastName",
          "accountId",
          "mobilePhone",
          "personalEmail",
          "tenantId",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ContactWithRelations"
      },
      "Feature": {
        "title": "Feature",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "NewFeature": {
        "title": "NewFeature",
        "type": "object",
        "description": "(tsType: Omit<Feature, 'featureId' | 'tenantId'>, schemaOptions: { title: 'NewFeature', exclude: [ 'featureId', 'tenantId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Feature, 'featureId' | 'tenantId'>"
      },
      "FeatureWithRelations": {
        "title": "FeatureWithRelations",
        "type": "object",
        "description": "(tsType: FeatureWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "FeatureWithRelations"
      },
      "FeaturePartial": {
        "title": "FeaturePartial",
        "type": "object",
        "description": "(tsType: Partial<Feature>, schemaOptions: { partial: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Feature>"
      },
      "InvoiceWithRelations": {
        "title": "InvoiceWithRelations",
        "type": "object",
        "description": "(tsType: InvoiceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number"
          },
          "amountWithoutTax": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "sent",
              "paid",
              "paritially-paid",
              "pending"
            ]
          }
        },
        "required": [
          "invoiceDate",
          "dueDate",
          "accountId",
          "tenantId",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "InvoiceWithRelations"
      },
      "Menu": {
        "title": "Menu",
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "routeTo": {
            "type": "string"
          },
          "level": {
            "type": "number"
          },
          "sequence": {
            "type": "number"
          },
          "upLabel": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "label",
          "level",
          "sequence",
          "status"
        ],
        "additionalProperties": false
      },
      "NewMenu": {
        "title": "NewMenu",
        "type": "object",
        "description": "(tsType: Menu, schemaOptions: { title: 'NewMenu' })",
        "properties": {
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "routeTo": {
            "type": "string"
          },
          "level": {
            "type": "number"
          },
          "sequence": {
            "type": "number"
          },
          "upLabel": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "label",
          "level",
          "sequence",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Menu"
      },
      "MenuWithRelations": {
        "title": "MenuWithRelations",
        "type": "object",
        "description": "(tsType: MenuWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "routeTo": {
            "type": "string"
          },
          "level": {
            "type": "number"
          },
          "sequence": {
            "type": "number"
          },
          "upLabel": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "label",
          "level",
          "sequence",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "MenuWithRelations"
      },
      "NotificationWithRelations": {
        "title": "NotificationWithRelations",
        "type": "object",
        "description": "(tsType: NotificationWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "notificationId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "sender": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "templateId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "Push",
              "Email",
              "SMS",
              "Doc"
            ]
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          },
          "receiver": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "options": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "waiting replacements",
              "merged",
              "sent",
              "failed"
            ]
          },
          "replacements": {
            "type": "object"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "sentTs": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "type",
          "receiver"
        ],
        "additionalProperties": false,
        "x-typescript-type": "NotificationWithRelations"
      },
      "PaymentWithRelations": {
        "title": "PaymentWithRelations",
        "type": "object",
        "description": "(tsType: PaymentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "paymentId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "canceled",
              "failed",
              "paid",
              "partially-paid",
              "expired"
            ]
          },
          "acceptPartial": {
            "type": "boolean"
          },
          "expireBy": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "customer": {
            "type": "object"
          },
          "shortUrl": {
            "type": "string"
          },
          "paymentLinkId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "updateTs": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "amount",
          "amountPaid",
          "currency",
          "status",
          "acceptPartial",
          "expireBy"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PaymentWithRelations"
      },
      "PermissionItemWithRelations": {
        "title": "PermissionItemWithRelations",
        "type": "object",
        "description": "(tsType: PermissionItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resources": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "PermissionItemWithRelations"
      },
      "PermissionWithRelations": {
        "title": "PermissionWithRelations",
        "type": "object",
        "description": "(tsType: PermissionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deny": {
            "$ref": "#/components/schemas/PermissionItemWithRelations"
          },
          "allow": {
            "$ref": "#/components/schemas/PermissionItemWithRelations"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "PermissionWithRelations"
      },
      "PolicyWithRelations": {
        "title": "PolicyWithRelations",
        "type": "object",
        "description": "(tsType: PolicyWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/PermissionWithRelations"
          },
          "menu": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "permission"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PolicyWithRelations"
      },
      "Policy": {
        "title": "Policy",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          },
          "menu": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "permission"
        ],
        "additionalProperties": false
      },
      "NewPolicy": {
        "title": "NewPolicy",
        "type": "object",
        "description": "(tsType: Policy, schemaOptions: { title: 'NewPolicy' })",
        "properties": {
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          },
          "menu": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "permission"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Policy"
      },
      "PolicyPartial": {
        "title": "PolicyPartial",
        "type": "object",
        "description": "(tsType: Partial<Policy>, schemaOptions: { partial: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          },
          "menu": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Policy>"
      },
      "ProductRatePlanComponentWithRelations": {
        "title": "ProductRatePlanComponentWithRelations",
        "type": "object",
        "description": "(tsType: ProductRatePlanComponentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "productRatePlanComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "productRatePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeModel": {
            "type": "string",
            "enum": [
              "Flat Fee Pricing",
              "Per Unit Pricing",
              "Overage Pricing",
              "Volume Pricing",
              "Tiered Pricing",
              "Tiered with Overage Pricing",
              "Discount-Fixed Amount",
              "Discount-Percentage"
            ]
          },
          "chargeType": {
            "type": "string",
            "enum": [
              "One-Time",
              "Recurring",
              "Usage"
            ]
          },
          "listPriceBase": {
            "type": "string",
            "enum": [
              "Per Day",
              "Per Month"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          },
          "perUnitPrice": {
            "type": "number"
          },
          "taxExclusivePrice": {
            "type": "number"
          },
          "taxInclusivePrice": {
            "type": "number"
          },
          "taxable": {
            "type": "boolean"
          },
          "taxAmount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "uom": {
            "type": "object"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "productRatePlanId",
          "chargeModel",
          "chargeType",
          "currency",
          "taxable",
          "uomId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductRatePlanComponentWithRelations"
      },
      "ProductRatePlanComponent": {
        "title": "ProductRatePlanComponent",
        "type": "object",
        "properties": {
          "productRatePlanComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "productRatePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeModel": {
            "type": "string",
            "enum": [
              "Flat Fee Pricing",
              "Per Unit Pricing",
              "Overage Pricing",
              "Volume Pricing",
              "Tiered Pricing",
              "Tiered with Overage Pricing",
              "Discount-Fixed Amount",
              "Discount-Percentage"
            ]
          },
          "chargeType": {
            "type": "string",
            "enum": [
              "One-Time",
              "Recurring",
              "Usage"
            ]
          },
          "listPriceBase": {
            "type": "string",
            "enum": [
              "Per Day",
              "Per Month"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          },
          "perUnitPrice": {
            "type": "number"
          },
          "taxExclusivePrice": {
            "type": "number"
          },
          "taxInclusivePrice": {
            "type": "number"
          },
          "taxable": {
            "type": "boolean"
          },
          "taxAmount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "uom": {
            "type": "object"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "productRatePlanId",
          "chargeModel",
          "chargeType",
          "currency",
          "taxable",
          "uomId"
        ],
        "additionalProperties": false
      },
      "NewProductRatePlanComponent": {
        "title": "NewProductRatePlanComponent",
        "type": "object",
        "description": "(tsType: Omit<ProductRatePlanComponent, 'productRatePlanComponentId'>, schemaOptions: { title: 'NewProductRatePlanComponent', exclude: [ 'productRatePlanComponentId' ] })",
        "properties": {
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "productRatePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeModel": {
            "type": "string",
            "enum": [
              "Flat Fee Pricing",
              "Per Unit Pricing",
              "Overage Pricing",
              "Volume Pricing",
              "Tiered Pricing",
              "Tiered with Overage Pricing",
              "Discount-Fixed Amount",
              "Discount-Percentage"
            ]
          },
          "chargeType": {
            "type": "string",
            "enum": [
              "One-Time",
              "Recurring",
              "Usage"
            ]
          },
          "listPriceBase": {
            "type": "string",
            "enum": [
              "Per Day",
              "Per Month"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          },
          "perUnitPrice": {
            "type": "number"
          },
          "taxExclusivePrice": {
            "type": "number"
          },
          "taxInclusivePrice": {
            "type": "number"
          },
          "taxable": {
            "type": "boolean"
          },
          "taxAmount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "uom": {
            "type": "object"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "productRatePlanId",
          "chargeModel",
          "chargeType",
          "currency",
          "taxable",
          "uomId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<ProductRatePlanComponent, 'productRatePlanComponentId'>"
      },
      "ProductRatePlan": {
        "title": "ProductRatePlan",
        "type": "object",
        "properties": {
          "productRatePlanId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "productId": {
            "type": "string"
          },
          "currencies": {
            "type": "object"
          },
          "features": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "productRatePlanId",
          "name",
          "effectiveFromDate",
          "productId",
          "currencies"
        ],
        "additionalProperties": false
      },
      "NewProductRatePlan": {
        "title": "NewProductRatePlan",
        "type": "object",
        "description": "(tsType: Omit<ProductRatePlan, 'productRatePlanId'>, schemaOptions: { title: 'NewProductRatePlan', exclude: [ 'productRatePlanId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "productId": {
            "type": "string"
          },
          "currencies": {
            "type": "object"
          },
          "features": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "effectiveFromDate",
          "productId",
          "currencies"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<ProductRatePlan, 'productRatePlanId'>"
      },
      "ProductRatePlanWithRelations": {
        "title": "ProductRatePlanWithRelations",
        "type": "object",
        "description": "(tsType: ProductRatePlanWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "productRatePlanId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "productId": {
            "type": "string"
          },
          "currencies": {
            "type": "object"
          },
          "features": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "productRatePlanId",
          "name",
          "effectiveFromDate",
          "productId",
          "currencies"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductRatePlanWithRelations"
      },
      "FeatureJSONWithRelations": {
        "title": "FeatureJSONWithRelations",
        "type": "object",
        "description": "(tsType: FeatureJSONWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureWithRelations"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "FeatureJSONWithRelations"
      },
      "ProductWithRelations": {
        "title": "ProductWithRelations",
        "type": "object",
        "description": "(tsType: ProductWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "img": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "Base Product",
              "Miscellaneous Product"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "features": {
            "$ref": "#/components/schemas/FeatureJSONWithRelations"
          }
        },
        "required": [
          "name",
          "effectiveFromDate",
          "category"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductWithRelations"
      },
      "FeatureJSON": {
        "title": "FeatureJSON",
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "img": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "Base Product",
              "Miscellaneous Product"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "features": {
            "$ref": "#/components/schemas/FeatureJSON"
          }
        },
        "required": [
          "name",
          "effectiveFromDate",
          "category"
        ],
        "additionalProperties": false
      },
      "FeatureExcluding_product_id_": {
        "title": "FeatureExcluding_product_id_",
        "type": "object",
        "description": "(tsType: Omit<Feature, 'product_id'>, schemaOptions: { exclude: [ 'product_id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "featureId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Feature, 'product_id'>"
      },
      "FeatureJSONExcluding_product_id_": {
        "title": "FeatureJSONExcluding_product_id_",
        "type": "object",
        "description": "(tsType: Omit<FeatureJSON, 'product_id'>, schemaOptions: { exclude: [ 'product_id' ] })",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureExcluding_product_id_"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<FeatureJSON, 'product_id'>"
      },
      "NewProduct": {
        "title": "NewProduct",
        "type": "object",
        "description": "(tsType: Omit<Product, 'product_id'>, schemaOptions: { title: 'NewProduct', exclude: [ 'product_id' ] })",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "img": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "Base Product",
              "Miscellaneous Product"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "features": {
            "$ref": "#/components/schemas/FeatureJSONExcluding_product_id_"
          }
        },
        "required": [
          "name",
          "effectiveFromDate",
          "category"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Product, 'product_id'>"
      },
      "ProductPartial": {
        "title": "ProductPartial",
        "type": "object",
        "description": "(tsType: Partial<Product>, schemaOptions: { partial: true })",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "img": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "Base Product",
              "Miscellaneous Product"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Suspended"
            ]
          },
          "features": {
            "$ref": "#/components/schemas/FeatureJSON"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Product>"
      },
      "RatePlanComponentWithRelations": {
        "title": "RatePlanComponentWithRelations",
        "type": "object",
        "description": "(tsType: RatePlanComponentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "ratePlanComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "defaultQuantity": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "includedUnits": {
            "type": "number"
          },
          "minQuantity": {
            "type": "number"
          },
          "maxQuantity": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "ratePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "productRatePlanComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "chargeModel": {
            "type": "string",
            "enum": [
              "Flat Fee Pricing",
              "Per Unit Pricing",
              "Overage Pricing",
              "Volume Pricing",
              "Tiered Pricing",
              "Tiered with Overage Pricing",
              "Discount-Fixed Amount",
              "Discount-Percentage"
            ]
          },
          "chargeType": {
            "type": "string",
            "enum": [
              "One-Time",
              "Recurring",
              "Usage"
            ]
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "effectiveToDate": {
            "type": "string",
            "format": "date"
          },
          "endDateCondition": {
            "type": "string",
            "enum": [
              "Subscription End",
              "Fixed Period",
              "Specific End Date",
              "One Time"
            ]
          },
          "listPriceBase": {
            "type": "string",
            "enum": [
              "Per Day",
              "Per Month"
            ]
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          },
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "uom": {
            "type": "object"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "ratePlanId",
          "productRatePlanComponentId",
          "chargeModel",
          "chargeType",
          "effectiveFromDate",
          "endDateCondition",
          "price",
          "currency",
          "uomId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "RatePlanComponentWithRelations"
      },
      "RatePlanWithRelations": {
        "title": "RatePlanWithRelations",
        "type": "object",
        "description": "(tsType: RatePlanWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "ratePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "productRatePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Deleted",
              "Suspended"
            ]
          },
          "effectiveFromDate": {
            "type": "string",
            "format": "date"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "type": "string",
            "enum": [
              "INR",
              "USD",
              "CAD",
              "GBP"
            ]
          }
        },
        "required": [
          "subscriptionId",
          "productRatePlanId",
          "name",
          "status",
          "effectiveFromDate",
          "currency"
        ],
        "additionalProperties": false,
        "x-typescript-type": "RatePlanWithRelations"
      },
      "RoleWithRelations": {
        "title": "RoleWithRelations",
        "type": "object",
        "description": "(tsType: RoleWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/PermissionWithRelations"
          },
          "menu": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "RoleWithRelations"
      },
      "Role": {
        "title": "Role",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          },
          "menu": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NewRole": {
        "title": "NewRole",
        "type": "object",
        "description": "(tsType: Omit<RoleRequest, 'tenantId'>, schemaOptions: { title: 'NewRole', exclude: [ 'tenantId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "policyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "policyIds"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<RoleRequest, 'tenantId'>"
      },
      "RoleRequest": {
        "title": "RoleRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "policyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "policyIds"
        ],
        "additionalProperties": false
      },
      "SubscriptionWithRelations": {
        "title": "SubscriptionWithRelations",
        "type": "object",
        "description": "(tsType: SubscriptionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "termType": {
            "type": "string",
            "enum": [
              "Termed",
              "Evergreen"
            ]
          },
          "contractAcceptanceDate": {
            "type": "string",
            "format": "date"
          },
          "contractEffectiveDate": {
            "type": "string",
            "format": "date"
          },
          "initialTerm": {
            "type": "number"
          },
          "initialTermPeriodType": {
            "type": "string",
            "enum": [
              "Day",
              "Week",
              "Month",
              "Year"
            ]
          },
          "currentTerm": {
            "type": "number"
          },
          "currentTermPeriodType": {
            "type": "string",
            "enum": [
              "Day",
              "Week",
              "Month",
              "Year"
            ]
          },
          "renewTerm": {
            "type": "number"
          },
          "renewTermPeriodType": {
            "type": "string",
            "enum": [
              "Day",
              "Week",
              "Month",
              "Year"
            ]
          },
          "subscriptionStartDate": {
            "type": "string",
            "format": "date"
          },
          "subscriptionEndDate": {
            "type": "string",
            "format": "date"
          },
          "termStartDate": {
            "type": "string",
            "format": "date"
          },
          "termEndDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Pending Activation",
              "Pending Acceptance",
              "Yet-To-Start",
              "Active",
              "Cancelled",
              "Expired",
              "Suspended"
            ]
          },
          "originalSubscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "version": {
            "type": "number"
          }
        },
        "required": [
          "tenantId",
          "accountId",
          "autoRenew",
          "termType",
          "contractAcceptanceDate",
          "contractEffectiveDate",
          "initialTerm",
          "initialTermPeriodType",
          "currentTerm",
          "currentTermPeriodType",
          "status",
          "version"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SubscriptionWithRelations"
      },
      "TemplateVarWithRelations": {
        "title": "TemplateVarWithRelations",
        "type": "object",
        "description": "(tsType: TemplateVarWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "variable": {
            "type": "string"
          },
          "constant": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "templateId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TemplateVarWithRelations"
      },
      "NewTemplate": {
        "title": "NewTemplate",
        "type": "object",
        "description": "(tsType: Omit<TemplateDTO, 'templateId'>, schemaOptions: { title: 'NewTemplate', exclude: [ 'templateId' ] })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "communicationType": {
            "type": "string",
            "enum": [
              "Push",
              "Email",
              "SMS",
              "Doc"
            ]
          }
        },
        "required": [
          "format",
          "subject",
          "isDefault",
          "communicationType"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<TemplateDTO, 'templateId'>"
      },
      "TemplateDTO": {
        "title": "TemplateDTO",
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "communicationType": {
            "type": "string",
            "enum": [
              "Push",
              "Email",
              "SMS",
              "Doc"
            ]
          }
        },
        "required": [
          "format",
          "subject",
          "isDefault",
          "communicationType"
        ],
        "additionalProperties": false
      },
      "FileWithRelations": {
        "title": "FileWithRelations",
        "type": "object",
        "description": "(tsType: FileWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "main": {
            "type": "boolean"
          },
          "format": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "FileWithRelations"
      },
      "AttachmentWithRelations": {
        "title": "AttachmentWithRelations",
        "type": "object",
        "description": "(tsType: AttachmentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "templateId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "AttachmentWithRelations"
      },
      "TemplateWithRelations": {
        "title": "TemplateWithRelations",
        "type": "object",
        "description": "(tsType: TemplateWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "Welcome",
              "Reset Password",
              "Payment Request",
              "Payment Reminder",
              "Invoice"
            ]
          },
          "format": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileWithRelations"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentWithRelations"
            }
          },
          "isDefault": {
            "type": "boolean"
          },
          "communicationType": {
            "type": "string",
            "enum": [
              "Push",
              "Email",
              "SMS",
              "Doc"
            ]
          }
        },
        "required": [
          "isDefault",
          "communicationType"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TemplateWithRelations"
      },
      "TenantWithRelations": {
        "title": "TenantWithRelations",
        "type": "object",
        "description": "(tsType: TenantWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "orgName",
          "city",
          "state",
          "country",
          "pincode",
          "timezone"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TenantWithRelations"
      },
      "Tenant": {
        "title": "Tenant",
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "orgName",
          "city",
          "state",
          "country",
          "pincode",
          "timezone"
        ],
        "additionalProperties": false
      },
      "UserDto": {
        "title": "UserDto",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "email"
        ],
        "additionalProperties": false
      },
      "NewTenant": {
        "title": "NewTenant",
        "type": "object",
        "description": "(tsType: TenantUser, schemaOptions: { title: 'NewTenant' })",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/Tenant"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "tenant",
          "user"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TenantUser"
      },
      "TenantUser": {
        "title": "TenantUser",
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/Tenant"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "tenant",
          "user"
        ],
        "additionalProperties": false
      },
      "TenantPartial": {
        "title": "TenantPartial",
        "type": "object",
        "description": "(tsType: Partial<Tenant>, schemaOptions: { partial: true })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Tenant>"
      },
      "Uom": {
        "title": "Uom",
        "type": "object",
        "properties": {
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          },
          "roundingMode": {
            "type": "string",
            "enum": [
              "Up",
              "Down"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "displayAs",
          "decimalPlaces",
          "roundingMode"
        ],
        "additionalProperties": false
      },
      "NewUom": {
        "title": "NewUom",
        "type": "object",
        "description": "(tsType: Omit<Uom, 'uomId' | 'status'>, schemaOptions: { title: 'NewUom', exclude: [ 'uomId', 'status' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "roundingMode": {
            "type": "string",
            "enum": [
              "Up",
              "Down"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "displayAs",
          "decimalPlaces",
          "roundingMode"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Uom, 'uomId' | 'status'>"
      },
      "UomWithRelations": {
        "title": "UomWithRelations",
        "type": "object",
        "description": "(tsType: UomWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          },
          "roundingMode": {
            "type": "string",
            "enum": [
              "Up",
              "Down"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "displayAs",
          "decimalPlaces",
          "roundingMode"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UomWithRelations"
      },
      "UomPartial": {
        "title": "UomPartial",
        "type": "object",
        "description": "(tsType: Partial<Uom>, schemaOptions: { partial: true })",
        "properties": {
          "uomId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "displayAs": {
            "type": "string"
          },
          "decimalPlaces": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          },
          "roundingMode": {
            "type": "string",
            "enum": [
              "Up",
              "Down"
            ]
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Uom>"
      },
      "NewUser": {
        "title": "NewUser",
        "type": "object",
        "description": "(tsType: Omit<User, 'userId' | 'permission' | 'refreshToken' | 'menu' | 'status' | 'role' | 'password'>, schemaOptions: { title: 'NewUser', exclude: [ 'userId', 'permission', 'refreshToken', 'menu', 'status', 'role', 'password' ] })",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "email",
          "roleId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<User, 'userId' | 'permission' | 'refreshToken' | 'menu' | 'status' | 'role' | 'password'>"
      },
      "WebhookWithRelations": {
        "title": "WebhookWithRelations",
        "type": "object",
        "description": "(tsType: WebhookWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "webhookId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "retry": {
            "type": "boolean"
          },
          "body": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "url",
          "methodType",
          "contentType",
          "retry"
        ],
        "additionalProperties": false,
        "x-typescript-type": "WebhookWithRelations"
      },
      "WebhookDTO": {
        "title": "WebhookDTO",
        "type": "object",
        "properties": {
          "webhookId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "retry": {
            "type": "boolean"
          },
          "queryParams": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "authorisation": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "body": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "name",
          "url",
          "methodType",
          "contentType",
          "retry"
        ],
        "additionalProperties": false
      },
      "NewWebhook": {
        "title": "NewWebhook",
        "type": "object",
        "description": "(tsType: Omit<WebhookDTO, 'webhookId'>, schemaOptions: { title: 'NewWebhook', exclude: [ 'webhookId' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "methodType": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "retry": {
            "type": "boolean"
          },
          "queryParams": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "authorisation": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "body": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "name",
          "url",
          "methodType",
          "contentType",
          "retry"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<WebhookDTO, 'webhookId'>"
      },
      "Account.Filter": {
        "type": "object",
        "title": "Account.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "boolean"
                  },
                  "orgName": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "accountType": {
                    "type": "boolean"
                  },
                  "parentAccountId": {
                    "type": "boolean"
                  },
                  "billToId": {
                    "type": "boolean"
                  },
                  "soldToId": {
                    "type": "boolean"
                  },
                  "autoPay": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "balance": {
                    "type": "boolean"
                  },
                  "creditBalance": {
                    "type": "boolean"
                  },
                  "communicationPreference": {
                    "type": "boolean"
                  },
                  "defaultPaymentMethodId": {
                    "type": "boolean"
                  },
                  "lastInvoiceDate": {
                    "type": "boolean"
                  },
                  "paymentTerm": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "accountId",
                    "orgName",
                    "firstName",
                    "lastName",
                    "accountType",
                    "parentAccountId",
                    "billToId",
                    "soldToId",
                    "autoPay",
                    "currency",
                    "balance",
                    "creditBalance",
                    "communicationPreference",
                    "defaultPaymentMethodId",
                    "lastInvoiceDate",
                    "paymentTerm",
                    "tenantId",
                    "status"
                  ],
                  "example": "accountId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Account.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Account>"
      },
      "Account.Filter1": {
        "type": "object",
        "title": "Account.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Account.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "boolean"
                  },
                  "orgName": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "accountType": {
                    "type": "boolean"
                  },
                  "parentAccountId": {
                    "type": "boolean"
                  },
                  "billToId": {
                    "type": "boolean"
                  },
                  "soldToId": {
                    "type": "boolean"
                  },
                  "autoPay": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "balance": {
                    "type": "boolean"
                  },
                  "creditBalance": {
                    "type": "boolean"
                  },
                  "communicationPreference": {
                    "type": "boolean"
                  },
                  "defaultPaymentMethodId": {
                    "type": "boolean"
                  },
                  "lastInvoiceDate": {
                    "type": "boolean"
                  },
                  "paymentTerm": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "accountId",
                    "orgName",
                    "firstName",
                    "lastName",
                    "accountType",
                    "parentAccountId",
                    "billToId",
                    "soldToId",
                    "autoPay",
                    "currency",
                    "balance",
                    "creditBalance",
                    "communicationPreference",
                    "defaultPaymentMethodId",
                    "lastInvoiceDate",
                    "paymentTerm",
                    "tenantId",
                    "status"
                  ],
                  "example": "accountId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Account.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Account>"
      },
      "Action.Filter": {
        "type": "object",
        "title": "Action.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Action.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "module": {
                    "type": "boolean"
                  },
                  "method": {
                    "type": "boolean"
                  },
                  "route": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "notForTenant": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "module",
                    "method",
                    "route",
                    "name",
                    "notForTenant"
                  ],
                  "example": "module"
                },
                "uniqueItems": true
              }
            ],
            "title": "Action.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Action>"
      },
      "Feature.Filter": {
        "type": "object",
        "title": "Feature.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Feature.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "featureId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "description",
                    "featureId",
                    "status",
                    "tenantId"
                  ],
                  "example": "name"
                },
                "uniqueItems": true
              }
            ],
            "title": "Feature.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Feature>"
      },
      "Menu.Filter": {
        "type": "object",
        "title": "Menu.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Menu.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "boolean"
                  },
                  "icon": {
                    "type": "boolean"
                  },
                  "routeTo": {
                    "type": "boolean"
                  },
                  "level": {
                    "type": "boolean"
                  },
                  "sequence": {
                    "type": "boolean"
                  },
                  "upLabel": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "label",
                    "icon",
                    "routeTo",
                    "level",
                    "sequence",
                    "upLabel",
                    "status"
                  ],
                  "example": "label"
                },
                "uniqueItems": true
              }
            ],
            "title": "Menu.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Menu>"
      },
      "Notification.Filter": {
        "type": "object",
        "title": "Notification.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Notification.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "notificationId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "sender": {
                    "type": "boolean"
                  },
                  "subject": {
                    "type": "boolean"
                  },
                  "body": {
                    "type": "boolean"
                  },
                  "templateId": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "sentDate": {
                    "type": "boolean"
                  },
                  "receiver": {
                    "type": "boolean"
                  },
                  "options": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "replacements": {
                    "type": "boolean"
                  },
                  "accountId": {
                    "type": "boolean"
                  },
                  "sentTs": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "notificationId",
                    "tenantId",
                    "sender",
                    "subject",
                    "body",
                    "templateId",
                    "type",
                    "sentDate",
                    "receiver",
                    "options",
                    "status",
                    "replacements",
                    "accountId",
                    "sentTs"
                  ],
                  "example": "notificationId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Notification.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Notification>"
      },
      "Payment.Filter": {
        "type": "object",
        "title": "Payment.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Payment.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "accountId": {
                    "type": "boolean"
                  },
                  "invoiceId": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "boolean"
                  },
                  "amountPaid": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "acceptPartial": {
                    "type": "boolean"
                  },
                  "expireBy": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "customer": {
                    "type": "boolean"
                  },
                  "shortUrl": {
                    "type": "boolean"
                  },
                  "paymentLinkId": {
                    "type": "boolean"
                  },
                  "referenceId": {
                    "type": "boolean"
                  },
                  "updateTs": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "paymentId",
                    "tenantId",
                    "accountId",
                    "invoiceId",
                    "amount",
                    "amountPaid",
                    "currency",
                    "status",
                    "acceptPartial",
                    "expireBy",
                    "description",
                    "customer",
                    "shortUrl",
                    "paymentLinkId",
                    "referenceId",
                    "updateTs"
                  ],
                  "example": "paymentId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Payment.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Payment>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Policy.Filter": {
        "type": "object",
        "title": "Policy.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Policy.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "permission": {
                    "type": "boolean"
                  },
                  "menu": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "policyId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "tenantId",
                    "permission",
                    "menu",
                    "type",
                    "policyId"
                  ],
                  "example": "name"
                },
                "uniqueItems": true
              }
            ],
            "title": "Policy.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Policy>"
      },
      "Product.Filter": {
        "type": "object",
        "title": "Product.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Product.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "effectiveFromDate": {
                    "type": "boolean"
                  },
                  "effectiveToDate": {
                    "type": "boolean"
                  },
                  "img": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "features": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tenantId",
                    "productId",
                    "name",
                    "description",
                    "effectiveFromDate",
                    "effectiveToDate",
                    "img",
                    "category",
                    "status",
                    "features"
                  ],
                  "example": "tenantId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Product.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Product>"
      },
      "Role.Filter": {
        "type": "object",
        "title": "Role.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Role.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "permission": {
                    "type": "boolean"
                  },
                  "menu": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "roleId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "tenantId",
                    "permission",
                    "menu",
                    "type",
                    "roleId"
                  ],
                  "example": "name"
                },
                "uniqueItems": true
              }
            ],
            "title": "Role.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Role>"
      },
      "TemplateVar.Filter": {
        "type": "object",
        "title": "TemplateVar.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "TemplateVar.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "boolean"
                  },
                  "entity": {
                    "type": "boolean"
                  },
                  "variable": {
                    "type": "boolean"
                  },
                  "constant": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "templateId",
                    "entity",
                    "variable",
                    "constant",
                    "url"
                  ],
                  "example": "templateId"
                },
                "uniqueItems": true
              }
            ],
            "title": "TemplateVar.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<TemplateVar>"
      },
      "Template.Filter": {
        "type": "object",
        "title": "Template.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "format": {
                    "type": "boolean"
                  },
                  "subject": {
                    "type": "boolean"
                  },
                  "content": {
                    "type": "boolean"
                  },
                  "files": {
                    "type": "boolean"
                  },
                  "attachments": {
                    "type": "boolean"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "communicationType": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "templateId",
                    "tenantId",
                    "category",
                    "format",
                    "subject",
                    "content",
                    "files",
                    "attachments",
                    "isDefault",
                    "communicationType"
                  ],
                  "example": "templateId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Template.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Template>"
      },
      "Template.Filter1": {
        "type": "object",
        "title": "Template.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Template.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "category": {
                    "type": "boolean"
                  },
                  "format": {
                    "type": "boolean"
                  },
                  "subject": {
                    "type": "boolean"
                  },
                  "content": {
                    "type": "boolean"
                  },
                  "files": {
                    "type": "boolean"
                  },
                  "attachments": {
                    "type": "boolean"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "communicationType": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "templateId",
                    "tenantId",
                    "category",
                    "format",
                    "subject",
                    "content",
                    "files",
                    "attachments",
                    "isDefault",
                    "communicationType"
                  ],
                  "example": "templateId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Template.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Template>"
      },
      "Tenant.Filter": {
        "type": "object",
        "title": "Tenant.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Tenant.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "boolean"
                  },
                  "orgName": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "pincode": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tenantId",
                    "orgName",
                    "address",
                    "city",
                    "state",
                    "country",
                    "pincode",
                    "timezone",
                    "status"
                  ],
                  "example": "tenantId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Tenant.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tenant>"
      },
      "Uom.Filter": {
        "type": "object",
        "title": "Uom.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Uom.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "uomId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "displayAs": {
                    "type": "boolean"
                  },
                  "decimalPlaces": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "roundingMode": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "uomId",
                    "name",
                    "displayAs",
                    "decimalPlaces",
                    "status",
                    "roundingMode",
                    "tenantId"
                  ],
                  "example": "uomId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Uom.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Uom>"
      },
      "User.Filter": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "User.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "password": {
                    "type": "boolean"
                  },
                  "roleId": {
                    "type": "boolean"
                  },
                  "role": {
                    "type": "boolean"
                  },
                  "permission": {
                    "type": "boolean"
                  },
                  "menu": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "refreshToken": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "userId",
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "roleId",
                    "role",
                    "permission",
                    "menu",
                    "tenantId",
                    "refreshToken",
                    "status"
                  ],
                  "example": "userId"
                },
                "uniqueItems": true
              }
            ],
            "title": "User.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      },
      "Webhook.Filter": {
        "type": "object",
        "title": "Webhook.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Webhook.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "webhookId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "boolean"
                  },
                  "methodType": {
                    "type": "boolean"
                  },
                  "contentType": {
                    "type": "boolean"
                  },
                  "retry": {
                    "type": "boolean"
                  },
                  "body": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "webhookId",
                    "name",
                    "description",
                    "url",
                    "methodType",
                    "contentType",
                    "retry",
                    "body"
                  ],
                  "example": "webhookId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Webhook.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Webhook>"
      },
      "Contact.Filter": {
        "type": "object",
        "title": "Contact.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Contact.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "contactId": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "accountId": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "postalcode": {
                    "type": "boolean"
                  },
                  "mobilePhone": {
                    "type": "boolean"
                  },
                  "personalEmail": {
                    "type": "boolean"
                  },
                  "workEmail": {
                    "type": "boolean"
                  },
                  "workPhone": {
                    "type": "boolean"
                  },
                  "homePhone": {
                    "type": "boolean"
                  },
                  "fax": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "contactId",
                    "type",
                    "firstName",
                    "lastName",
                    "accountId",
                    "description",
                    "address",
                    "city",
                    "state",
                    "country",
                    "postalcode",
                    "mobilePhone",
                    "personalEmail",
                    "workEmail",
                    "workPhone",
                    "homePhone",
                    "fax",
                    "tenantId",
                    "status"
                  ],
                  "example": "contactId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Contact.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Contact>"
      },
      "Invoice.Filter": {
        "type": "object",
        "title": "Invoice.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Invoice.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "invoiceId": {
                    "type": "boolean"
                  },
                  "invoiceDate": {
                    "type": "boolean"
                  },
                  "dueDate": {
                    "type": "boolean"
                  },
                  "accountId": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "boolean"
                  },
                  "amountWithoutTax": {
                    "type": "boolean"
                  },
                  "balance": {
                    "type": "boolean"
                  },
                  "comments": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "invoiceId",
                    "invoiceDate",
                    "dueDate",
                    "accountId",
                    "amount",
                    "amountWithoutTax",
                    "balance",
                    "comments",
                    "tenantId",
                    "status"
                  ],
                  "example": "invoiceId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Invoice.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Invoice>"
      },
      "ProductRatePlanComponent.Filter": {
        "type": "object",
        "title": "ProductRatePlanComponent.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ProductRatePlanComponent.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "productRatePlanComponentId": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "includedUnits": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "productRatePlanId": {
                    "type": "boolean"
                  },
                  "chargeModel": {
                    "type": "boolean"
                  },
                  "chargeType": {
                    "type": "boolean"
                  },
                  "listPriceBase": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "perUnitPrice": {
                    "type": "boolean"
                  },
                  "taxExclusivePrice": {
                    "type": "boolean"
                  },
                  "taxInclusivePrice": {
                    "type": "boolean"
                  },
                  "taxable": {
                    "type": "boolean"
                  },
                  "taxAmount": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "uomId": {
                    "type": "boolean"
                  },
                  "uom": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "productRatePlanComponentId",
                    "description",
                    "includedUnits",
                    "name",
                    "productRatePlanId",
                    "chargeModel",
                    "chargeType",
                    "listPriceBase",
                    "currency",
                    "perUnitPrice",
                    "taxExclusivePrice",
                    "taxInclusivePrice",
                    "taxable",
                    "taxAmount",
                    "status",
                    "uomId",
                    "uom",
                    "tenantId"
                  ],
                  "example": "productRatePlanComponentId"
                },
                "uniqueItems": true
              }
            ],
            "title": "ProductRatePlanComponent.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ProductRatePlanComponent>"
      },
      "ProductRatePlan.Filter": {
        "type": "object",
        "title": "ProductRatePlan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ProductRatePlan.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "productRatePlanId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "effectiveFromDate": {
                    "type": "boolean"
                  },
                  "effectiveToDate": {
                    "type": "boolean"
                  },
                  "productId": {
                    "type": "boolean"
                  },
                  "currencies": {
                    "type": "boolean"
                  },
                  "features": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "productRatePlanId",
                    "name",
                    "description",
                    "effectiveFromDate",
                    "effectiveToDate",
                    "productId",
                    "currencies",
                    "features",
                    "status",
                    "tenantId"
                  ],
                  "example": "productRatePlanId"
                },
                "uniqueItems": true
              }
            ],
            "title": "ProductRatePlan.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ProductRatePlan>"
      },
      "RatePlanComponent.Filter": {
        "type": "object",
        "title": "RatePlanComponent.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "RatePlanComponent.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "ratePlanComponentId": {
                    "type": "boolean"
                  },
                  "defaultQuantity": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "includedUnits": {
                    "type": "boolean"
                  },
                  "minQuantity": {
                    "type": "boolean"
                  },
                  "maxQuantity": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "ratePlanId": {
                    "type": "boolean"
                  },
                  "productRatePlanComponentId": {
                    "type": "boolean"
                  },
                  "chargeModel": {
                    "type": "boolean"
                  },
                  "chargeType": {
                    "type": "boolean"
                  },
                  "effectiveFromDate": {
                    "type": "boolean"
                  },
                  "effectiveToDate": {
                    "type": "boolean"
                  },
                  "endDateCondition": {
                    "type": "boolean"
                  },
                  "listPriceBase": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "uomId": {
                    "type": "boolean"
                  },
                  "uom": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ratePlanComponentId",
                    "defaultQuantity",
                    "description",
                    "includedUnits",
                    "minQuantity",
                    "maxQuantity",
                    "name",
                    "ratePlanId",
                    "productRatePlanComponentId",
                    "chargeModel",
                    "chargeType",
                    "effectiveFromDate",
                    "effectiveToDate",
                    "endDateCondition",
                    "listPriceBase",
                    "price",
                    "currency",
                    "uomId",
                    "uom",
                    "tenantId"
                  ],
                  "example": "ratePlanComponentId"
                },
                "uniqueItems": true
              }
            ],
            "title": "RatePlanComponent.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<RatePlanComponent>"
      },
      "RatePlan.Filter": {
        "type": "object",
        "title": "RatePlan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "RatePlan.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "ratePlanId": {
                    "type": "boolean"
                  },
                  "subscriptionId": {
                    "type": "boolean"
                  },
                  "productRatePlanId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "effectiveFromDate": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ratePlanId",
                    "subscriptionId",
                    "productRatePlanId",
                    "name",
                    "status",
                    "effectiveFromDate",
                    "tenantId",
                    "currency"
                  ],
                  "example": "ratePlanId"
                },
                "uniqueItems": true
              }
            ],
            "title": "RatePlan.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<RatePlan>"
      },
      "Subscription.Filter": {
        "type": "object",
        "title": "Subscription.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Subscription.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "subscriptionId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "accountId": {
                    "type": "boolean"
                  },
                  "autoRenew": {
                    "type": "boolean"
                  },
                  "termType": {
                    "type": "boolean"
                  },
                  "contractAcceptanceDate": {
                    "type": "boolean"
                  },
                  "contractEffectiveDate": {
                    "type": "boolean"
                  },
                  "initialTerm": {
                    "type": "boolean"
                  },
                  "initialTermPeriodType": {
                    "type": "boolean"
                  },
                  "currentTerm": {
                    "type": "boolean"
                  },
                  "currentTermPeriodType": {
                    "type": "boolean"
                  },
                  "renewTerm": {
                    "type": "boolean"
                  },
                  "renewTermPeriodType": {
                    "type": "boolean"
                  },
                  "subscriptionStartDate": {
                    "type": "boolean"
                  },
                  "subscriptionEndDate": {
                    "type": "boolean"
                  },
                  "termStartDate": {
                    "type": "boolean"
                  },
                  "termEndDate": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "originalSubscriptionId": {
                    "type": "boolean"
                  },
                  "version": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "subscriptionId",
                    "tenantId",
                    "accountId",
                    "autoRenew",
                    "termType",
                    "contractAcceptanceDate",
                    "contractEffectiveDate",
                    "initialTerm",
                    "initialTermPeriodType",
                    "currentTerm",
                    "currentTermPeriodType",
                    "renewTerm",
                    "renewTermPeriodType",
                    "subscriptionStartDate",
                    "subscriptionEndDate",
                    "termStartDate",
                    "termEndDate",
                    "status",
                    "originalSubscriptionId",
                    "version"
                  ],
                  "example": "subscriptionId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Subscription.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscription>"
      }
    }
  },
  "security": [
    {
      "jwt": []
    }
  ],
  "servers": [
    {
      "url": "/"
    }
  ]
}