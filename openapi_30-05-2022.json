{
  "openapi": "3.0.0",
  "info": {
    "title": "billhive-facade",
    "version": "0.0.1",
    "description": "facades",
    "contact": {
      "name": "Mohit Aggarwal",
      "email": "mohitetc2008@gmail.com"
    }
  },
  "paths": {
    "/actions": {
      "get": {
        "x-controller-name": "ActionController",
        "x-operation-name": "find",
        "tags": [
          "ActionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Action model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ActionController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/policies": {
      "get": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "find",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Array of Policy model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PolicyController.find"
      }
    },
    "/role/update": {
      "post": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "roleUpdate",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Array of Policy model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PolicyController.roleUpdate"
      }
    },
    "/role/delete": {
      "post": {
        "x-controller-name": "PolicyController",
        "x-operation-name": "roleDelete",
        "tags": [
          "PolicyController"
        ],
        "responses": {
          "200": {
            "description": "Array of Policy model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PolicyController.roleDelete"
      }
    },
    "/templates": {
      "post": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "login",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TemplateController.login"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TemplateController.login"
      }
    },
    "/tenantadmin": {
      "post": {
        "x-controller-name": "TenantController",
        "x-operation-name": "createTenant",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenant"
              }
            }
          }
        },
        "operationId": "TenantController.createTenant"
      }
    },
    "/uoms": {
      "post": {
        "x-controller-name": "UomController",
        "x-operation-name": "create",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "Uom model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uom"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Uom"
              }
            }
          }
        },
        "operationId": "UomController.create"
      }
    },
    "/uoms/{id}": {
      "patch": {
        "x-controller-name": "UomController",
        "x-operation-name": "updateById",
        "tags": [
          "UomController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "UOM PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Uom.Filter"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "UomController.updateById"
      },
      "delete": {
        "x-controller-name": "UomController",
        "x-operation-name": "deleteUom",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Uom Successful deleted"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UomController.deleteById"
      }
    },
    "/tenants/{id}": {
      "patch": {
        "x-controller-name": "TenantController",
        "x-operation-name": "updateById",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tenant PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TenantController.updateById"
      },
      "delete": {
        "x-controller-name": "TenantController",
        "x-operation-name": "deleteTenant",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Tenant Successful deleted"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TenantController.deleteTenant"
      }
    },
    "/tenants": {
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "find",
        "tags": [
          "TenantController"
        ],
        "responses": {
          "200": {
            "description": "Return value of TenantController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant.Filter"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TenantController.find"
      }
    },
    "/users/forget-password": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "forgetPassword",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.forgetPassword"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.forgetPassword"
      }
    },
    "/users/{id}": {
      "patch": {
        "x-controller-name": "AuthController",
        "x-operation-name": "updateUser",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User.Filter"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AuthController.updateUser"
      }
    },
    "/features/{id}": {
      "patch": {
        "x-controller-name": "FeatureController",
        "x-operation-name": "updateById",
        "tags": [
          "FeatureController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Feature PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feature.Filter"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FeatureController.updateById"
      },
       "delete": {
        "x-controller-name": "FeaturesController",
        "x-operation-name": "deleteById",
        "tags": [
          "FeaturesController"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Features Successful deleted"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FeaturesController.deleteById"
      }
    },
    "/users/login": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "login",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.login"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.login"
      }
    },
    "/users/reset-password": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "resetPassword",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.resetPassword"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.resetPassword"
      }
    },
    "/users": {
      "get": {
        "x-controller-name": "AuthController",
        "x-operation-name": "find",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.find"
      }
    },
    "/users": {
      "post": {
        "x-controller-name": "AuthController",
        "x-operation-name": "create",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.create"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.Filter"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "AuthController.create"
      }
    },
    "/uoms": {
      "get": {
        "x-controller-name": "UomController",
        "x-operation-name": "find",
        "tags": [
          "UomController"
        ],
        "responses": {
          "200": {
            "description": "Return value of UomController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uom.Filter"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "UomController.find"
      }
    },"/product-rate-plans": {
      "get": {
        "x-controller-name": "ProductRatePlanController",
        "x-operation-name": "find",
        "tags": [
          "ProductRatePlanController"
        ],
        "responses": {
          "200": {
            "description": "Return value of ProductRatePlanController.find"
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRatePlan.Filter"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "ProductRatePlan.find"
      }
    },
    "/whoami": {
      "get": {
        "x-controller-name": "AuthController",
        "x-operation-name": "whoami",
        "tags": [
          "AuthController"
        ],
        "responses": {
          "200": {
            "description": "Return value of AuthController.whoami"
          }
        },
        "operationId": "AuthController.whoami"
      }
    }
  },
  "security": [
    {
      "jwt": []
    }
  ],
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "ActionWithRelations": {
        "title": "ActionWithRelations",
        "type": "object",
        "description": "(tsType: ActionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "module": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "route": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "module",
          "method",
          "route",
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ActionWithRelations"
      },
      "PolicyWithRelations": {
        "title": "PolicyWithRelations",
        "type": "object",
        "description": "(tsType: PolicyWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "isAllowed": {
            "type": "boolean"
          },
          "resourceId": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          }
        },
        "required": [
          "module",
          "action",
          "isAllowed"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PolicyWithRelations"
      },
      "Tenant": {
        "title": "Tenant",
        "type": "object",
        "properties": {
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "required": [
          "orgName",
          "city",
          "state",
          "country",
          "pincode",
          "timezone",
          "status"
        ],
        "additionalProperties": false
      },
      "NewTenant": {
        "title": "NewTenant",
        "type": "object",
        "description": "(tsType: TenantUser, schemaOptions: { title: 'NewTenant' })",
        "properties": {
          "tenant": {
            "type": "object"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "tenant",
          "user"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TenantUser"
      },
      "TenantUser": {
        "title": "TenantUser",
        "type": "object",
        "properties": {
          "tenant": {
            "type": "object"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "tenant",
          "user"
        ],
        "additionalProperties": false
      },
      "TenantPartial": {
        "title": "TenantPartial",
        "type": "object",
        "description": "(tsType: Partial<Tenant>, schemaOptions: { partial: true })",
        "properties": {
          "orgName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Tenant>"
      },
      "Action.Filter": {
        "type": "object",
        "title": "Action.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Action.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "module": {
                    "type": "boolean"
                  },
                  "method": {
                    "type": "boolean"
                  },
                  "route": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "module",
                    "method",
                    "route",
                    "name"
                  ],
                  "example": "module"
                },
                "uniqueItems": true
              }
            ],
            "title": "Action.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Action>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Policy.Filter": {
        "type": "object",
        "title": "Policy.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Policy.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "role": {
                    "type": "boolean"
                  },
                  "module": {
                    "type": "boolean"
                  },
                  "action": {
                    "type": "boolean"
                  },
                  "isAllowed": {
                    "type": "boolean"
                  },
                  "resourceId": {
                    "type": "boolean"
                  },
                  "policyId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tenantId",
                    "userId",
                    "role",
                    "module",
                    "action",
                    "isAllowed",
                    "resourceId",
                    "policyId"
                  ],
                  "example": "tenantId"
                },
                "uniqueItems": true
              }
            ],
            "title": "Policy.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Policy>"
      },
      "Tenant.Filter": {
        "type": "object",
        "title": "Tenant.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Tenant.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "orgName": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "pincode": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "orgName",
                    "address",
                    "city",
                    "state",
                    "country",
                    "pincode",
                    "timezone",
                    "status"
                  ],
                  "example": "orgName"
                },
                "uniqueItems": true
              }
            ],
            "title": "Tenant.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tenant>"
      },
      "User.Filter": {
        "type": "object",
        "title": "User.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "User.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "password": {
                    "type": "boolean"
                  },
                  "role": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "userId",
                    "tenantId",
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "role",
                    "status"
                  ],
                  "example": "userId"
                },
                "uniqueItems": true
              }
            ],
            "title": "User.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<User>"
      }
    }
  }
}